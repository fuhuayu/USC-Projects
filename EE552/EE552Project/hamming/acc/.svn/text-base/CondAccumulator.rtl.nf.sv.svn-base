`include "~/proteus/pdk/proteus/svc2rtl.sv"
  `E1OFN_M(2,16)
  `E1OFN_M(2,1)
  //--------RTL module--------
module  CondAccumulator_RTL    ( interface   C1     , interface   C2      , interface   C3      , interface   I1      , interface   I2      , interface   O      , input    CLK      , input    _RESET       )  ;  logic  [ I1    .  W            -  1       : 0       ]    x1     , ff$x1       ;       logic  [ I2    .  W            -  1       : 0       ]    x2     , ff$x2       ;       logic  [ O    .  W            -  1       : 0       ]    sum     , ff$sum       ;       logic    c1     , ff$c1     , c2     , ff$c2     , c3     , ff$c3       ;       always_ff  @ ( posedge    CLK         , negedge    _RESET          )   begin if ( !    _RESET          ) begin ff$sum        <= 0        ;    end     else begin ff$x1        <=   x1         ;    ff$x2        <=   x2         ;    ff$sum        <=   sum         ;    ff$c1        <=   c1         ;    ff$c2        <=   c2         ;    ff$c3        <=   c3         ;    end         end            always_comb  begin C1    .  InitDo        ;     C2    .  InitDo        ;     C3    .  InitDo        ;     I1    .  InitDo        ;     I2    .  InitDo        ;     O    .  InitDo        ;     O    .  InitData        ;     x1        =    ff$x1          ;    x2        =    ff$x2          ;    sum        =    ff$sum          ;    c1        =    ff$c1          ;    c2        =    ff$c2          ;    c3        =    ff$c3          ;    x1        =  0         ;    x2        =  0         ;    C1        . Receive     (   c1          )      ;     C2        . Receive     (   c2          )      ;     C3        . Receive     (   c3          )      ;     if (   c1          ) I1        . Receive     (   x1          )      ;         if (   c2          ) I2        . Receive     (   x1          )      ;         sum        =  sum            +  x1            +    x2            ;    if (   c3          ) O        . Send     (   sum          )      ;         end        endmodule    //--------------------------
//------Wrapper module------
module  CondAccumulator    ( e1of2_1    . In      C1     , e1of2_1    . In      C2      , e1of2_1    . In      C3      , e1of2_16    . In      I1      , e1of2_16    . In      I2      , e1of2_16    . Out      O      , input    CLK      , input    _RESET       )  ;  rtl_interface    # ( . M    (   C1    .  M          ) , . N    (   C1    .  N          )   )  RTL_C1     (    )  ;     RECV_M_1ofN    # ( . M    (   C1    .  M          ) , . N    (   C1    .  N          )   )  C1_RECEIVE     (   C1    .  In         ,   RTL_C1    .  RcvOut           )  ;     rtl_interface    # ( . M    (   C2    .  M          ) , . N    (   C2    .  N          )   )  RTL_C2     (    )  ;     RECV_M_1ofN    # ( . M    (   C2    .  M          ) , . N    (   C2    .  N          )   )  C2_RECEIVE     (   C2    .  In         ,   RTL_C2    .  RcvOut           )  ;     rtl_interface    # ( . M    (   C3    .  M          ) , . N    (   C3    .  N          )   )  RTL_C3     (    )  ;     RECV_M_1ofN    # ( . M    (   C3    .  M          ) , . N    (   C3    .  N          )   )  C3_RECEIVE     (   C3    .  In         ,   RTL_C3    .  RcvOut           )  ;     rtl_interface    # ( . M    (   I1    .  M          ) , . N    (   I1    .  N          )   )  RTL_I1     (    )  ;     RECV_M_1ofN    # ( . M    (   I1    .  M          ) , . N    (   I1    .  N          )   )  I1_RECEIVE     (   I1    .  In         ,   RTL_I1    .  RcvOut           )  ;     rtl_interface    # ( . M    (   I2    .  M          ) , . N    (   I2    .  N          )   )  RTL_I2     (    )  ;     RECV_M_1ofN    # ( . M    (   I2    .  M          ) , . N    (   I2    .  N          )   )  I2_RECEIVE     (   I2    .  In         ,   RTL_I2    .  RcvOut           )  ;     rtl_interface    # ( . M    (   O    .  M          ) , . N    (   O    .  N          )   )  RTL_O     (    )  ;     SEND_M_1ofN    # ( . M    (   O    .  M          ) , . N    (   O    .  N          )   )  O_SEND     (   RTL_O    .  SndIn         ,   O    .  Out           )  ;     CondAccumulator_RTL    CondAccumulator_RTL_BODY     ( . C1    (   RTL_C1    .  RtlIn            ) , . C2    (   RTL_C2    .  RtlIn            ) , . C3    (   RTL_C3    .  RtlIn            ) , . I1    (   RTL_I1    .  RtlIn            ) , . I2    (   RTL_I2    .  RtlIn            ) , . O    (   RTL_O    .  RtlOut            ) , . CLK    (   CLK            ) , . _RESET    (   _RESET            )   ) ;       endmodule    