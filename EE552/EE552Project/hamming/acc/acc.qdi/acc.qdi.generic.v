
// Generated by Cadence Encounter(R) RTL Compiler v08.10-s108_1

module RECV_N_1of2_N16(E, \L.0[15] , \L.0[14] , \L.0[13] , \L.0[12] ,
     \L.0[11] , \L.0[10] , \L.0[9] , \L.0[8] , \L.0[7] , \L.0[6] ,
     \L.0[5] , \L.0[4] , \L.0[3] , \L.0[2] , \L.0[1] , \L.0[0] ,
     \L.1[15] , \L.1[14] , \L.1[13] , \L.1[12] , \L.1[11] , \L.1[10] ,
     \L.1[9] , \L.1[8] , \L.1[7] , \L.1[6] , \L.1[5] , \L.1[4] ,
     \L.1[3] , \L.1[2] , \L.1[1] , \L.1[0] , \L.e[15] , \L.e[14] ,
     \L.e[13] , \L.e[12] , \L.e[11] , \L.e[10] , \L.e[9] , \L.e[8] ,
     \L.e[7] , \L.e[6] , \L.e[5] , \L.e[4] , \L.e[3] , \L.e[2] ,
     \L.e[1] , \L.e[0] , \R[15] , \R[14] , \R[13] , \R[12] , \R[11] ,
     \R[10] , \R[9] , \R[8] , \R[7] , \R[6] , \R[5] , \R[4] , \R[3] ,
     \R[2] , \R[1] , \R[0] );
  input E;
  input \L.0[15] , \L.0[14] , \L.0[13] , \L.0[12] , \L.0[11] , \L.0[10]
       , \L.0[9] , \L.0[8] , \L.0[7] , \L.0[6] , \L.0[5] , \L.0[4] ,
       \L.0[3] , \L.0[2] , \L.0[1] , \L.0[0] ;
  input \L.1[15] , \L.1[14] , \L.1[13] , \L.1[12] , \L.1[11] , \L.1[10]
       , \L.1[9] , \L.1[8] , \L.1[7] , \L.1[6] , \L.1[5] , \L.1[4] ,
       \L.1[3] , \L.1[2] , \L.1[1] , \L.1[0] ;
  output \L.e[15] , \L.e[14] , \L.e[13] , \L.e[12] , \L.e[11] ,
       \L.e[10] , \L.e[9] , \L.e[8] , \L.e[7] , \L.e[6] , \L.e[5] ,
       \L.e[4] , \L.e[3] , \L.e[2] , \L.e[1] , \L.e[0] ;
  output \R[15] , \R[14] , \R[13] , \R[12] , \R[11] , \R[10] , \R[9] ,
       \R[8] , \R[7] , \R[6] , \R[5] , \R[4] , \R[3] , \R[2] , \R[1] ,
       \R[0] ;
  wire E;
  wire \L.0[15] , \L.0[14] , \L.0[13] , \L.0[12] , \L.0[11] , \L.0[10]
       , \L.0[9] , \L.0[8] , \L.0[7] , \L.0[6] , \L.0[5] , \L.0[4] ,
       \L.0[3] , \L.0[2] , \L.0[1] , \L.0[0] ;
  wire \L.1[15] , \L.1[14] , \L.1[13] , \L.1[12] , \L.1[11] , \L.1[10]
       , \L.1[9] , \L.1[8] , \L.1[7] , \L.1[6] , \L.1[5] , \L.1[4] ,
       \L.1[3] , \L.1[2] , \L.1[1] , \L.1[0] ;
  wire \L.e[15] , \L.e[14] , \L.e[13] , \L.e[12] , \L.e[11] , \L.e[10]
       , \L.e[9] , \L.e[8] , \L.e[7] , \L.e[6] , \L.e[5] , \L.e[4] ,
       \L.e[3] , \L.e[2] , \L.e[1] , \L.e[0] ;
  wire \R[15] , \R[14] , \R[13] , \R[12] , \R[11] , \R[10] , \R[9] ,
       \R[8] , \R[7] , \R[6] , \R[5] , \R[4] , \R[3] , \R[2] , \R[1] ,
       \R[0] ;
  RECV_1of2_X2 \bits[0].recv (.\L.0  (\L.0[0] ), .\L.1  (\L.1[0] ), .E
       (E), .\L.e  (\L.e[0] ), .\R[0]  (\R[0] ));
  RECV_1of2_X2 \bits[10].recv (.\L.0  (\L.0[10] ), .\L.1  (\L.1[10] ),
       .E (E), .\L.e  (\L.e[10] ), .\R[0]  (\R[10] ));
  RECV_1of2_X2 \bits[11].recv (.\L.0  (\L.0[11] ), .\L.1  (\L.1[11] ),
       .E (E), .\L.e  (\L.e[11] ), .\R[0]  (\R[11] ));
  RECV_1of2_X2 \bits[12].recv (.\L.0  (\L.0[12] ), .\L.1  (\L.1[12] ),
       .E (E), .\L.e  (\L.e[12] ), .\R[0]  (\R[12] ));
  RECV_1of2_X2 \bits[13].recv (.\L.0  (\L.0[13] ), .\L.1  (\L.1[13] ),
       .E (E), .\L.e  (\L.e[13] ), .\R[0]  (\R[13] ));
  RECV_1of2_X2 \bits[14].recv (.\L.0  (\L.0[14] ), .\L.1  (\L.1[14] ),
       .E (E), .\L.e  (\L.e[14] ), .\R[0]  (\R[14] ));
  RECV_1of2_X2 \bits[15].recv (.\L.0  (\L.0[15] ), .\L.1  (\L.1[15] ),
       .E (E), .\L.e  (\L.e[15] ), .\R[0]  (\R[15] ));
  RECV_1of2_X2 \bits[1].recv (.\L.0  (\L.0[1] ), .\L.1  (\L.1[1] ), .E
       (E), .\L.e  (\L.e[1] ), .\R[0]  (\R[1] ));
  RECV_1of2_X2 \bits[2].recv (.\L.0  (\L.0[2] ), .\L.1  (\L.1[2] ), .E
       (E), .\L.e  (\L.e[2] ), .\R[0]  (\R[2] ));
  RECV_1of2_X2 \bits[3].recv (.\L.0  (\L.0[3] ), .\L.1  (\L.1[3] ), .E
       (E), .\L.e  (\L.e[3] ), .\R[0]  (\R[3] ));
  RECV_1of2_X2 \bits[4].recv (.\L.0  (\L.0[4] ), .\L.1  (\L.1[4] ), .E
       (E), .\L.e  (\L.e[4] ), .\R[0]  (\R[4] ));
  RECV_1of2_X2 \bits[5].recv (.\L.0  (\L.0[5] ), .\L.1  (\L.1[5] ), .E
       (E), .\L.e  (\L.e[5] ), .\R[0]  (\R[5] ));
  RECV_1of2_X2 \bits[6].recv (.\L.0  (\L.0[6] ), .\L.1  (\L.1[6] ), .E
       (E), .\L.e  (\L.e[6] ), .\R[0]  (\R[6] ));
  RECV_1of2_X2 \bits[7].recv (.\L.0  (\L.0[7] ), .\L.1  (\L.1[7] ), .E
       (E), .\L.e  (\L.e[7] ), .\R[0]  (\R[7] ));
  RECV_1of2_X2 \bits[8].recv (.\L.0  (\L.0[8] ), .\L.1  (\L.1[8] ), .E
       (E), .\L.e  (\L.e[8] ), .\R[0]  (\R[8] ));
  RECV_1of2_X2 \bits[9].recv (.\L.0  (\L.0[9] ), .\L.1  (\L.1[9] ), .E
       (E), .\L.e  (\L.e[9] ), .\R[0]  (\R[9] ));
endmodule

module
     RECV_M_1ofN_M16_N2_L_e1of2_16_In_R_rtl_interface_N2_M16_RcvOut(\L_d[0][15]
     , \L_d[0][14] , \L_d[0][13] , \L_d[0][12] , \L_d[0][11] ,
     \L_d[0][10] , \L_d[0][9] , \L_d[0][8] , \L_d[0][7] , \L_d[0][6] ,
     \L_d[0][5] , \L_d[0][4] , \L_d[0][3] , \L_d[0][2] , \L_d[0][1] ,
     \L_d[0][0] , \L_d[1][15] , \L_d[1][14] , \L_d[1][13] , \L_d[1][12]
     , \L_d[1][11] , \L_d[1][10] , \L_d[1][9] , \L_d[1][8] , \L_d[1][7]
     , \L_d[1][6] , \L_d[1][5] , \L_d[1][4] , \L_d[1][3] , \L_d[1][2] ,
     \L_d[1][1] , \L_d[1][0] , \L_e[15] , \L_e[14] , \L_e[13] ,
     \L_e[12] , \L_e[11] , \L_e[10] , \L_e[9] , \L_e[8] , \L_e[7] ,
     \L_e[6] , \L_e[5] , \L_e[4] , \L_e[3] , \L_e[2] , \L_e[1] ,
     \L_e[0] , \R_d[15] , \R_d[14] , \R_d[13] , \R_d[12] , \R_d[11] ,
     \R_d[10] , \R_d[9] , \R_d[8] , \R_d[7] , \R_d[6] , \R_d[5] ,
     \R_d[4] , \R_d[3] , \R_d[2] , \R_d[1] , \R_d[0] , R_e);
  input \L_d[0][15] , \L_d[0][14] , \L_d[0][13] , \L_d[0][12] ,
       \L_d[0][11] , \L_d[0][10] , \L_d[0][9] , \L_d[0][8] , \L_d[0][7]
       , \L_d[0][6] , \L_d[0][5] , \L_d[0][4] , \L_d[0][3] , \L_d[0][2]
       , \L_d[0][1] , \L_d[0][0] ;
  input \L_d[1][15] , \L_d[1][14] , \L_d[1][13] , \L_d[1][12] ,
       \L_d[1][11] , \L_d[1][10] , \L_d[1][9] , \L_d[1][8] , \L_d[1][7]
       , \L_d[1][6] , \L_d[1][5] , \L_d[1][4] , \L_d[1][3] , \L_d[1][2]
       , \L_d[1][1] , \L_d[1][0] ;
  input R_e;
  output \L_e[15] , \L_e[14] , \L_e[13] , \L_e[12] , \L_e[11] ,
       \L_e[10] , \L_e[9] , \L_e[8] , \L_e[7] , \L_e[6] , \L_e[5] ,
       \L_e[4] , \L_e[3] , \L_e[2] , \L_e[1] , \L_e[0] ;
  output \R_d[15] , \R_d[14] , \R_d[13] , \R_d[12] , \R_d[11] ,
       \R_d[10] , \R_d[9] , \R_d[8] , \R_d[7] , \R_d[6] , \R_d[5] ,
       \R_d[4] , \R_d[3] , \R_d[2] , \R_d[1] , \R_d[0] ;
  wire \L_d[0][15] , \L_d[0][14] , \L_d[0][13] , \L_d[0][12] ,
       \L_d[0][11] , \L_d[0][10] , \L_d[0][9] , \L_d[0][8] , \L_d[0][7]
       , \L_d[0][6] , \L_d[0][5] , \L_d[0][4] , \L_d[0][3] , \L_d[0][2]
       , \L_d[0][1] , \L_d[0][0] ;
  wire \L_d[1][15] , \L_d[1][14] , \L_d[1][13] , \L_d[1][12] ,
       \L_d[1][11] , \L_d[1][10] , \L_d[1][9] , \L_d[1][8] , \L_d[1][7]
       , \L_d[1][6] , \L_d[1][5] , \L_d[1][4] , \L_d[1][3] , \L_d[1][2]
       , \L_d[1][1] , \L_d[1][0] ;
  wire R_e;
  wire \L_e[15] , \L_e[14] , \L_e[13] , \L_e[12] , \L_e[11] , \L_e[10]
       , \L_e[9] , \L_e[8] , \L_e[7] , \L_e[6] , \L_e[5] , \L_e[4] ,
       \L_e[3] , \L_e[2] , \L_e[1] , \L_e[0] ;
  wire \R_d[15] , \R_d[14] , \R_d[13] , \R_d[12] , \R_d[11] , \R_d[10]
       , \R_d[9] , \R_d[8] , \R_d[7] , \R_d[6] , \R_d[5] , \R_d[4] ,
       \R_d[3] , \R_d[2] , \R_d[1] , \R_d[0] ;
  RECV_N_1of2_N16 recv(.E (R_e), .\L.0[15]  (\L_d[0][15] ), .\L.0[14] 
       (\L_d[0][14] ), .\L.0[13]  (\L_d[0][13] ), .\L.0[12] 
       (\L_d[0][12] ), .\L.0[11]  (\L_d[0][11] ), .\L.0[10] 
       (\L_d[0][10] ), .\L.0[9]  (\L_d[0][9] ), .\L.0[8]  (\L_d[0][8]
       ), .\L.0[7]  (\L_d[0][7] ), .\L.0[6]  (\L_d[0][6] ), .\L.0[5] 
       (\L_d[0][5] ), .\L.0[4]  (\L_d[0][4] ), .\L.0[3]  (\L_d[0][3] ),
       .\L.0[2]  (\L_d[0][2] ), .\L.0[1]  (\L_d[0][1] ), .\L.0[0] 
       (\L_d[0][0] ), .\L.1[15]  (\L_d[1][15] ), .\L.1[14] 
       (\L_d[1][14] ), .\L.1[13]  (\L_d[1][13] ), .\L.1[12] 
       (\L_d[1][12] ), .\L.1[11]  (\L_d[1][11] ), .\L.1[10] 
       (\L_d[1][10] ), .\L.1[9]  (\L_d[1][9] ), .\L.1[8]  (\L_d[1][8]
       ), .\L.1[7]  (\L_d[1][7] ), .\L.1[6]  (\L_d[1][6] ), .\L.1[5] 
       (\L_d[1][5] ), .\L.1[4]  (\L_d[1][4] ), .\L.1[3]  (\L_d[1][3] ),
       .\L.1[2]  (\L_d[1][2] ), .\L.1[1]  (\L_d[1][1] ), .\L.1[0] 
       (\L_d[1][0] ), .\L.e[15]  (\L_e[15] ), .\L.e[14]  (\L_e[14] ),
       .\L.e[13]  (\L_e[13] ), .\L.e[12]  (\L_e[12] ), .\L.e[11] 
       (\L_e[11] ), .\L.e[10]  (\L_e[10] ), .\L.e[9]  (\L_e[9] ),
       .\L.e[8]  (\L_e[8] ), .\L.e[7]  (\L_e[7] ), .\L.e[6]  (\L_e[6]
       ), .\L.e[5]  (\L_e[5] ), .\L.e[4]  (\L_e[4] ), .\L.e[3] 
       (\L_e[3] ), .\L.e[2]  (\L_e[2] ), .\L.e[1]  (\L_e[1] ), .\L.e[0]
        (\L_e[0] ), .\R[15]  (\R_d[15] ), .\R[14]  (\R_d[14] ), .\R[13]
        (\R_d[13] ), .\R[12]  (\R_d[12] ), .\R[11]  (\R_d[11] ),
       .\R[10]  (\R_d[10] ), .\R[9]  (\R_d[9] ), .\R[8]  (\R_d[8] ),
       .\R[7]  (\R_d[7] ), .\R[6]  (\R_d[6] ), .\R[5]  (\R_d[5] ),
       .\R[4]  (\R_d[4] ), .\R[3]  (\R_d[3] ), .\R[2]  (\R_d[2] ),
       .\R[1]  (\R_d[1] ), .\R[0]  (\R_d[0] ));
endmodule

module SEND_N_1of2_N16(E, \R.0[15] , \R.0[14] , \R.0[13] , \R.0[12] ,
     \R.0[11] , \R.0[10] , \R.0[9] , \R.0[8] , \R.0[7] , \R.0[6] ,
     \R.0[5] , \R.0[4] , \R.0[3] , \R.0[2] , \R.0[1] , \R.0[0] ,
     \R.1[15] , \R.1[14] , \R.1[13] , \R.1[12] , \R.1[11] , \R.1[10] ,
     \R.1[9] , \R.1[8] , \R.1[7] , \R.1[6] , \R.1[5] , \R.1[4] ,
     \R.1[3] , \R.1[2] , \R.1[1] , \R.1[0] , \R.e[15] , \R.e[14] ,
     \R.e[13] , \R.e[12] , \R.e[11] , \R.e[10] , \R.e[9] , \R.e[8] ,
     \R.e[7] , \R.e[6] , \R.e[5] , \R.e[4] , \R.e[3] , \R.e[2] ,
     \R.e[1] , \R.e[0] , \L[15] , \L[14] , \L[13] , \L[12] , \L[11] ,
     \L[10] , \L[9] , \L[8] , \L[7] , \L[6] , \L[5] , \L[4] , \L[3] ,
     \L[2] , \L[1] , \L[0] );
  input E;
  input \R.e[15] , \R.e[14] , \R.e[13] , \R.e[12] , \R.e[11] , \R.e[10]
       , \R.e[9] , \R.e[8] , \R.e[7] , \R.e[6] , \R.e[5] , \R.e[4] ,
       \R.e[3] , \R.e[2] , \R.e[1] , \R.e[0] ;
  input \L[15] , \L[14] , \L[13] , \L[12] , \L[11] , \L[10] , \L[9] ,
       \L[8] , \L[7] , \L[6] , \L[5] , \L[4] , \L[3] , \L[2] , \L[1] ,
       \L[0] ;
  output \R.0[15] , \R.0[14] , \R.0[13] , \R.0[12] , \R.0[11] ,
       \R.0[10] , \R.0[9] , \R.0[8] , \R.0[7] , \R.0[6] , \R.0[5] ,
       \R.0[4] , \R.0[3] , \R.0[2] , \R.0[1] , \R.0[0] ;
  output \R.1[15] , \R.1[14] , \R.1[13] , \R.1[12] , \R.1[11] ,
       \R.1[10] , \R.1[9] , \R.1[8] , \R.1[7] , \R.1[6] , \R.1[5] ,
       \R.1[4] , \R.1[3] , \R.1[2] , \R.1[1] , \R.1[0] ;
  wire E;
  wire \R.e[15] , \R.e[14] , \R.e[13] , \R.e[12] , \R.e[11] , \R.e[10]
       , \R.e[9] , \R.e[8] , \R.e[7] , \R.e[6] , \R.e[5] , \R.e[4] ,
       \R.e[3] , \R.e[2] , \R.e[1] , \R.e[0] ;
  wire \L[15] , \L[14] , \L[13] , \L[12] , \L[11] , \L[10] , \L[9] ,
       \L[8] , \L[7] , \L[6] , \L[5] , \L[4] , \L[3] , \L[2] , \L[1] ,
       \L[0] ;
  wire \R.0[15] , \R.0[14] , \R.0[13] , \R.0[12] , \R.0[11] , \R.0[10]
       , \R.0[9] , \R.0[8] , \R.0[7] , \R.0[6] , \R.0[5] , \R.0[4] ,
       \R.0[3] , \R.0[2] , \R.0[1] , \R.0[0] ;
  wire \R.1[15] , \R.1[14] , \R.1[13] , \R.1[12] , \R.1[11] , \R.1[10]
       , \R.1[9] , \R.1[8] , \R.1[7] , \R.1[6] , \R.1[5] , \R.1[4] ,
       \R.1[3] , \R.1[2] , \R.1[1] , \R.1[0] ;
  SEND_1of2_X2 \bits[0].send (.\R.e  (\R.e[0] ), .E (E), .\L[0]  (\L[0]
       ), .\R.0  (\R.0[0] ), .\R.1  (\R.1[0] ));
  SEND_1of2_X2 \bits[10].send (.\R.e  (\R.e[10] ), .E (E), .\L[0] 
       (\L[10] ), .\R.0  (\R.0[10] ), .\R.1  (\R.1[10] ));
  SEND_1of2_X2 \bits[11].send (.\R.e  (\R.e[11] ), .E (E), .\L[0] 
       (\L[11] ), .\R.0  (\R.0[11] ), .\R.1  (\R.1[11] ));
  SEND_1of2_X2 \bits[12].send (.\R.e  (\R.e[12] ), .E (E), .\L[0] 
       (\L[12] ), .\R.0  (\R.0[12] ), .\R.1  (\R.1[12] ));
  SEND_1of2_X2 \bits[13].send (.\R.e  (\R.e[13] ), .E (E), .\L[0] 
       (\L[13] ), .\R.0  (\R.0[13] ), .\R.1  (\R.1[13] ));
  SEND_1of2_X2 \bits[14].send (.\R.e  (\R.e[14] ), .E (E), .\L[0] 
       (\L[14] ), .\R.0  (\R.0[14] ), .\R.1  (\R.1[14] ));
  SEND_1of2_X2 \bits[15].send (.\R.e  (\R.e[15] ), .E (E), .\L[0] 
       (\L[15] ), .\R.0  (\R.0[15] ), .\R.1  (\R.1[15] ));
  SEND_1of2_X2 \bits[1].send (.\R.e  (\R.e[1] ), .E (E), .\L[0]  (\L[1]
       ), .\R.0  (\R.0[1] ), .\R.1  (\R.1[1] ));
  SEND_1of2_X2 \bits[2].send (.\R.e  (\R.e[2] ), .E (E), .\L[0]  (\L[2]
       ), .\R.0  (\R.0[2] ), .\R.1  (\R.1[2] ));
  SEND_1of2_X2 \bits[3].send (.\R.e  (\R.e[3] ), .E (E), .\L[0]  (\L[3]
       ), .\R.0  (\R.0[3] ), .\R.1  (\R.1[3] ));
  SEND_1of2_X2 \bits[4].send (.\R.e  (\R.e[4] ), .E (E), .\L[0]  (\L[4]
       ), .\R.0  (\R.0[4] ), .\R.1  (\R.1[4] ));
  SEND_1of2_X2 \bits[5].send (.\R.e  (\R.e[5] ), .E (E), .\L[0]  (\L[5]
       ), .\R.0  (\R.0[5] ), .\R.1  (\R.1[5] ));
  SEND_1of2_X2 \bits[6].send (.\R.e  (\R.e[6] ), .E (E), .\L[0]  (\L[6]
       ), .\R.0  (\R.0[6] ), .\R.1  (\R.1[6] ));
  SEND_1of2_X2 \bits[7].send (.\R.e  (\R.e[7] ), .E (E), .\L[0]  (\L[7]
       ), .\R.0  (\R.0[7] ), .\R.1  (\R.1[7] ));
  SEND_1of2_X2 \bits[8].send (.\R.e  (\R.e[8] ), .E (E), .\L[0]  (\L[8]
       ), .\R.0  (\R.0[8] ), .\R.1  (\R.1[8] ));
  SEND_1of2_X2 \bits[9].send (.\R.e  (\R.e[9] ), .E (E), .\L[0]  (\L[9]
       ), .\R.0  (\R.0[9] ), .\R.1  (\R.1[9] ));
endmodule

module
     SEND_M_1ofN_M16_N2_L_rtl_interface_N2_M16_SndIn_R_e1of2_16_Out(\L_d[15]
     , \L_d[14] , \L_d[13] , \L_d[12] , \L_d[11] , \L_d[10] , \L_d[9] ,
     \L_d[8] , \L_d[7] , \L_d[6] , \L_d[5] , \L_d[4] , \L_d[3] ,
     \L_d[2] , \L_d[1] , \L_d[0] , L_e, \R_d[0][15] , \R_d[0][14] ,
     \R_d[0][13] , \R_d[0][12] , \R_d[0][11] , \R_d[0][10] , \R_d[0][9]
     , \R_d[0][8] , \R_d[0][7] , \R_d[0][6] , \R_d[0][5] , \R_d[0][4] ,
     \R_d[0][3] , \R_d[0][2] , \R_d[0][1] , \R_d[0][0] , \R_d[1][15] ,
     \R_d[1][14] , \R_d[1][13] , \R_d[1][12] , \R_d[1][11] ,
     \R_d[1][10] , \R_d[1][9] , \R_d[1][8] , \R_d[1][7] , \R_d[1][6] ,
     \R_d[1][5] , \R_d[1][4] , \R_d[1][3] , \R_d[1][2] , \R_d[1][1] ,
     \R_d[1][0] , \R_e[15] , \R_e[14] , \R_e[13] , \R_e[12] , \R_e[11]
     , \R_e[10] , \R_e[9] , \R_e[8] , \R_e[7] , \R_e[6] , \R_e[5] ,
     \R_e[4] , \R_e[3] , \R_e[2] , \R_e[1] , \R_e[0] );
  input \L_d[15] , \L_d[14] , \L_d[13] , \L_d[12] , \L_d[11] , \L_d[10]
       , \L_d[9] , \L_d[8] , \L_d[7] , \L_d[6] , \L_d[5] , \L_d[4] ,
       \L_d[3] , \L_d[2] , \L_d[1] , \L_d[0] ;
  input \R_e[15] , \R_e[14] , \R_e[13] , \R_e[12] , \R_e[11] , \R_e[10]
       , \R_e[9] , \R_e[8] , \R_e[7] , \R_e[6] , \R_e[5] , \R_e[4] ,
       \R_e[3] , \R_e[2] , \R_e[1] , \R_e[0] ;
  input L_e;
  output \R_d[0][15] , \R_d[0][14] , \R_d[0][13] , \R_d[0][12] ,
       \R_d[0][11] , \R_d[0][10] , \R_d[0][9] , \R_d[0][8] , \R_d[0][7]
       , \R_d[0][6] , \R_d[0][5] , \R_d[0][4] , \R_d[0][3] , \R_d[0][2]
       , \R_d[0][1] , \R_d[0][0] ;
  output \R_d[1][15] , \R_d[1][14] , \R_d[1][13] , \R_d[1][12] ,
       \R_d[1][11] , \R_d[1][10] , \R_d[1][9] , \R_d[1][8] , \R_d[1][7]
       , \R_d[1][6] , \R_d[1][5] , \R_d[1][4] , \R_d[1][3] , \R_d[1][2]
       , \R_d[1][1] , \R_d[1][0] ;
  wire \L_d[15] , \L_d[14] , \L_d[13] , \L_d[12] , \L_d[11] , \L_d[10]
       , \L_d[9] , \L_d[8] , \L_d[7] , \L_d[6] , \L_d[5] , \L_d[4] ,
       \L_d[3] , \L_d[2] , \L_d[1] , \L_d[0] ;
  wire \R_e[15] , \R_e[14] , \R_e[13] , \R_e[12] , \R_e[11] , \R_e[10]
       , \R_e[9] , \R_e[8] , \R_e[7] , \R_e[6] , \R_e[5] , \R_e[4] ,
       \R_e[3] , \R_e[2] , \R_e[1] , \R_e[0] ;
  wire L_e;
  wire \R_d[0][15] , \R_d[0][14] , \R_d[0][13] , \R_d[0][12] ,
       \R_d[0][11] , \R_d[0][10] , \R_d[0][9] , \R_d[0][8] , \R_d[0][7]
       , \R_d[0][6] , \R_d[0][5] , \R_d[0][4] , \R_d[0][3] , \R_d[0][2]
       , \R_d[0][1] , \R_d[0][0] ;
  wire \R_d[1][15] , \R_d[1][14] , \R_d[1][13] , \R_d[1][12] ,
       \R_d[1][11] , \R_d[1][10] , \R_d[1][9] , \R_d[1][8] , \R_d[1][7]
       , \R_d[1][6] , \R_d[1][5] , \R_d[1][4] , \R_d[1][3] , \R_d[1][2]
       , \R_d[1][1] , \R_d[1][0] ;
  SEND_N_1of2_N16 send(.E (L_e), .\R.0[15]  (\R_d[0][15] ), .\R.0[14] 
       (\R_d[0][14] ), .\R.0[13]  (\R_d[0][13] ), .\R.0[12] 
       (\R_d[0][12] ), .\R.0[11]  (\R_d[0][11] ), .\R.0[10] 
       (\R_d[0][10] ), .\R.0[9]  (\R_d[0][9] ), .\R.0[8]  (\R_d[0][8]
       ), .\R.0[7]  (\R_d[0][7] ), .\R.0[6]  (\R_d[0][6] ), .\R.0[5] 
       (\R_d[0][5] ), .\R.0[4]  (\R_d[0][4] ), .\R.0[3]  (\R_d[0][3] ),
       .\R.0[2]  (\R_d[0][2] ), .\R.0[1]  (\R_d[0][1] ), .\R.0[0] 
       (\R_d[0][0] ), .\R.1[15]  (\R_d[1][15] ), .\R.1[14] 
       (\R_d[1][14] ), .\R.1[13]  (\R_d[1][13] ), .\R.1[12] 
       (\R_d[1][12] ), .\R.1[11]  (\R_d[1][11] ), .\R.1[10] 
       (\R_d[1][10] ), .\R.1[9]  (\R_d[1][9] ), .\R.1[8]  (\R_d[1][8]
       ), .\R.1[7]  (\R_d[1][7] ), .\R.1[6]  (\R_d[1][6] ), .\R.1[5] 
       (\R_d[1][5] ), .\R.1[4]  (\R_d[1][4] ), .\R.1[3]  (\R_d[1][3] ),
       .\R.1[2]  (\R_d[1][2] ), .\R.1[1]  (\R_d[1][1] ), .\R.1[0] 
       (\R_d[1][0] ), .\R.e[15]  (\R_e[15] ), .\R.e[14]  (\R_e[14] ),
       .\R.e[13]  (\R_e[13] ), .\R.e[12]  (\R_e[12] ), .\R.e[11] 
       (\R_e[11] ), .\R.e[10]  (\R_e[10] ), .\R.e[9]  (\R_e[9] ),
       .\R.e[8]  (\R_e[8] ), .\R.e[7]  (\R_e[7] ), .\R.e[6]  (\R_e[6]
       ), .\R.e[5]  (\R_e[5] ), .\R.e[4]  (\R_e[4] ), .\R.e[3] 
       (\R_e[3] ), .\R.e[2]  (\R_e[2] ), .\R.e[1]  (\R_e[1] ), .\R.e[0]
        (\R_e[0] ), .\L[15]  (\L_d[15] ), .\L[14]  (\L_d[14] ), .\L[13]
        (\L_d[13] ), .\L[12]  (\L_d[12] ), .\L[11]  (\L_d[11] ),
       .\L[10]  (\L_d[10] ), .\L[9]  (\L_d[9] ), .\L[8]  (\L_d[8] ),
       .\L[7]  (\L_d[7] ), .\L[6]  (\L_d[6] ), .\L[5]  (\L_d[5] ),
       .\L[4]  (\L_d[4] ), .\L[3]  (\L_d[3] ), .\L[2]  (\L_d[2] ),
       .\L[1]  (\L_d[1] ), .\L[0]  (\L_d[0] ));
endmodule

module add_unsigned(\A[15] , \A[14] , \A[13] , \A[12] , \A[11] , \A[10]
     , \A[9] , \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] ,
     \A[1] , \A[0] , \B[15] , \B[14] , \B[13] , \B[12] , \B[11] ,
     \B[10] , \B[9] , \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] ,
     \B[2] , \B[1] , \B[0] , \Z[15] , \Z[14] , \Z[13] , \Z[12] , \Z[11]
     , \Z[10] , \Z[9] , \Z[8] , \Z[7] , \Z[6] , \Z[5] , \Z[4] , \Z[3] ,
     \Z[2] , \Z[1] , \Z[0] );
  input \A[15] , \A[14] , \A[13] , \A[12] , \A[11] , \A[10] , \A[9] ,
       \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] ,
       \A[0] ;
  input \B[15] , \B[14] , \B[13] , \B[12] , \B[11] , \B[10] , \B[9] ,
       \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] ,
       \B[0] ;
  output \Z[15] , \Z[14] , \Z[13] , \Z[12] , \Z[11] , \Z[10] , \Z[9] ,
       \Z[8] , \Z[7] , \Z[6] , \Z[5] , \Z[4] , \Z[3] , \Z[2] , \Z[1] ,
       \Z[0] ;
  wire \A[15] , \A[14] , \A[13] , \A[12] , \A[11] , \A[10] , \A[9] ,
       \A[8] , \A[7] , \A[6] , \A[5] , \A[4] , \A[3] , \A[2] , \A[1] ,
       \A[0] ;
  wire \B[15] , \B[14] , \B[13] , \B[12] , \B[11] , \B[10] , \B[9] ,
       \B[8] , \B[7] , \B[6] , \B[5] , \B[4] , \B[3] , \B[2] , \B[1] ,
       \B[0] ;
  wire \Z[15] , \Z[14] , \Z[13] , \Z[12] , \Z[11] , \Z[10] , \Z[9] ,
       \Z[8] , \Z[7] , \Z[6] , \Z[5] , \Z[4] , \Z[3] , \Z[2] , \Z[1] ,
       \Z[0] ;
  wire n_50, n_51, n_54, n_55, n_56, n_57, n_58, n_59;
  wire n_60, n_61, n_62, n_63, n_64, n_65, n_66, n_67;
  wire n_68, n_69, n_70, n_71, n_72, n_73, n_74, n_75;
  wire n_76, n_77, n_78, n_79, n_80, n_81, n_82, n_83;
  wire n_84, n_85, n_86, n_87, n_88, n_89, n_90, n_91;
  wire n_92, n_93, n_94, n_95, n_96, n_99, n_100, n_101;
  wire n_102, n_103, n_104, n_105, n_106, n_107, n_108, n_109;
  wire n_110, n_111, n_112, n_113, n_114, n_115, n_116, n_117;
  wire n_118, n_119, n_120, n_121, n_122, n_123, n_124, n_125;
  wire n_126, n_127, n_128, n_129, n_130, n_136, n_137, n_138;
  wire n_139, n_140, n_141, n_142, n_143, n_144, n_145, n_146;
  wire n_147, n_148, n_149, n_150, n_151, n_152, n_153, n_154;
  wire n_155, n_156, n_157, n_158, n_163, n_164, n_165, n_166;
  wire n_167, n_168, n_169, n_170, n_171, n_172, n_173, n_174;
  wire n_175, n_176, n_177, n_178, n_179, n_180, n_181, n_185;
  wire n_186, n_187, n_188, n_189, n_190, n_191, n_192, n_193;
  wire n_194, n_195, n_196, n_197, n_198, n_199, n_200, n_201;
  wire n_202, n_203, n_204, n_205, n_206, n_207, n_208, n_209;
  wire n_210, n_211, n_212, n_213, n_214, n_215, n_216, n_217;
  wire n_218;
  xor g1 (\Z[0] , \A[0] , \B[0] );
  nor g10 (n_60, \A[3] , \B[3] );
  not g102 (n_137, n_69);
  nand g103 (n_138, n_136, n_137);
  nand g104 (n_192, n_65, n_138);
  nand g105 (n_139, n_109, n_136);
  nand g106 (n_194, n_106, n_139);
  not g107 (n_141, n_140);
  nand g108 (n_143, n_136, n_141);
  nand g109 (n_197, n_142, n_143);
  nand g11 (n_61, \A[3] , \B[3] );
  not g110 (n_145, n_144);
  nand g111 (n_147, n_136, n_145);
  nand g112 (n_163, n_146, n_147);
  nor g113 (n_149, n_93, n_148);
  not g114 (n_150, n_88);
  nor g115 (n_174, n_149, n_150);
  nor g116 (n_173, n_93, n_151);
  not g117 (n_152, n_129);
  nor g118 (n_153, n_148, n_152);
  not g119 (n_154, n_126);
  nor g12 (n_69, \A[4] , \B[4] );
  nor g120 (n_177, n_153, n_154);
  nor g121 (n_176, n_151, n_152);
  nor g122 (n_157, n_155, n_148);
  not g123 (n_158, n_156);
  nor g124 (n_180, n_157, n_158);
  nor g125 (n_179, n_151, n_155);
  nand g13 (n_65, \A[4] , \B[4] );
  not g130 (n_164, n_81);
  nand g131 (n_165, n_163, n_164);
  nand g132 (n_201, n_76, n_165);
  nand g133 (n_166, n_119, n_163);
  nand g134 (n_203, n_116, n_166);
  not g135 (n_168, n_167);
  nand g136 (n_170, n_163, n_168);
  nand g137 (n_206, n_169, n_170);
  not g138 (n_171, n_151);
  nand g139 (n_172, n_163, n_171);
  nor g14 (n_66, \A[5] , \B[5] );
  nand g140 (n_209, n_148, n_172);
  nand g141 (n_175, n_173, n_163);
  nand g142 (n_212, n_174, n_175);
  nand g143 (n_178, n_176, n_163);
  nand g144 (n_214, n_177, n_178);
  nand g145 (n_181, n_179, n_163);
  nand g146 (n_217, n_180, n_181);
  nand g149 (n_185, n_56, n_57);
  nand g15 (n_50, \A[5] , \B[5] );
  xnor g150 (\Z[1] , n_55, n_185);
  nand g151 (n_186, n_101, n_59);
  xnor g152 (\Z[2] , n_100, n_186);
  not g153 (n_187, n_60);
  nand g154 (n_189, n_187, n_61);
  xnor g155 (\Z[3] , n_188, n_189);
  nand g156 (n_190, n_137, n_65);
  xnor g157 (\Z[4] , n_136, n_190);
  not g158 (n_191, n_66);
  nand g159 (n_193, n_191, n_50);
  nor g16 (n_75, \A[6] , \B[6] );
  xnor g160 (\Z[5] , n_192, n_193);
  nand g161 (n_195, n_110, n_70);
  xnor g162 (\Z[6] , n_194, n_195);
  not g163 (n_196, n_71);
  nand g164 (n_198, n_196, n_72);
  xnor g165 (\Z[7] , n_197, n_198);
  nand g166 (n_199, n_164, n_76);
  xnor g167 (\Z[8] , n_163, n_199);
  not g168 (n_200, n_77);
  nand g169 (n_202, n_200, n_78);
  nand g17 (n_70, \A[6] , \B[6] );
  xnor g170 (\Z[9] , n_201, n_202);
  nand g171 (n_204, n_120, n_82);
  xnor g172 (\Z[10] , n_203, n_204);
  not g173 (n_205, n_83);
  nand g174 (n_207, n_205, n_84);
  xnor g175 (\Z[11] , n_206, n_207);
  not g176 (n_208, n_93);
  nand g177 (n_210, n_208, n_88);
  xnor g178 (\Z[12] , n_209, n_210);
  not g179 (n_211, n_89);
  nor g18 (n_71, \A[7] , \B[7] );
  nand g180 (n_213, n_211, n_90);
  xnor g181 (\Z[13] , n_212, n_213);
  nand g182 (n_215, n_130, n_94);
  xnor g183 (\Z[14] , n_214, n_215);
  not g184 (n_216, n_95);
  nand g185 (n_218, n_216, n_96);
  xnor g186 (\Z[15] , n_217, n_218);
  not g188 (n_55, n_51);
  nand g19 (n_72, \A[7] , \B[7] );
  nand g2 (n_51, \A[0] , \B[0] );
  nor g20 (n_81, \A[8] , \B[8] );
  nand g21 (n_76, \A[8] , \B[8] );
  nor g22 (n_77, \A[9] , \B[9] );
  nand g23 (n_78, \A[9] , \B[9] );
  nor g24 (n_87, \A[10] , \B[10] );
  nand g25 (n_82, \A[10] , \B[10] );
  nor g26 (n_83, \A[11] , \B[11] );
  nand g27 (n_84, \A[11] , \B[11] );
  nor g28 (n_93, \A[12] , \B[12] );
  nand g29 (n_88, \A[12] , \B[12] );
  nor g30 (n_89, \A[13] , \B[13] );
  nand g31 (n_90, \A[13] , \B[13] );
  nor g32 (n_99, \A[14] , \B[14] );
  nand g33 (n_94, \A[14] , \B[14] );
  nor g34 (n_95, \A[15] , \B[15] );
  nand g35 (n_96, \A[15] , \B[15] );
  not g36 (n_56, n_54);
  nand g37 (n_58, n_55, n_56);
  nand g38 (n_100, n_57, n_58);
  nor g39 (n_62, n_59, n_60);
  not g40 (n_63, n_61);
  nor g41 (n_104, n_62, n_63);
  nor g42 (n_103, n_64, n_60);
  nor g43 (n_67, n_65, n_66);
  not g44 (n_68, n_50);
  nor g45 (n_106, n_67, n_68);
  nor g46 (n_109, n_69, n_66);
  nor g47 (n_73, n_70, n_71);
  not g48 (n_74, n_72);
  nor g49 (n_113, n_73, n_74);
  nor g50 (n_111, n_75, n_71);
  nor g51 (n_79, n_76, n_77);
  not g52 (n_80, n_78);
  nor g53 (n_116, n_79, n_80);
  nor g54 (n_119, n_81, n_77);
  nor g55 (n_85, n_82, n_83);
  not g56 (n_86, n_84);
  nor g57 (n_123, n_85, n_86);
  nor g58 (n_121, n_87, n_83);
  nor g59 (n_91, n_88, n_89);
  nor g6 (n_54, \A[1] , \B[1] );
  not g60 (n_92, n_90);
  nor g61 (n_126, n_91, n_92);
  nor g62 (n_129, n_93, n_89);
  not g67 (n_101, n_64);
  nand g68 (n_102, n_100, n_101);
  nand g69 (n_188, n_59, n_102);
  nand g7 (n_57, \A[1] , \B[1] );
  nand g70 (n_105, n_103, n_100);
  nand g71 (n_136, n_104, n_105);
  nor g72 (n_107, n_75, n_106);
  not g73 (n_108, n_70);
  nor g74 (n_142, n_107, n_108);
  not g75 (n_110, n_75);
  nand g76 (n_140, n_109, n_110);
  not g77 (n_112, n_111);
  nor g78 (n_114, n_106, n_112);
  not g79 (n_115, n_113);
  nor g8 (n_64, \A[2] , \B[2] );
  nor g80 (n_146, n_114, n_115);
  nand g81 (n_144, n_109, n_111);
  nor g82 (n_117, n_87, n_116);
  not g83 (n_118, n_82);
  nor g84 (n_169, n_117, n_118);
  not g85 (n_120, n_87);
  nand g86 (n_167, n_119, n_120);
  not g87 (n_122, n_121);
  nor g88 (n_124, n_116, n_122);
  not g89 (n_125, n_123);
  nand g9 (n_59, \A[2] , \B[2] );
  nor g90 (n_148, n_124, n_125);
  nand g91 (n_151, n_119, n_121);
  nor g92 (n_127, n_99, n_126);
  not g93 (n_128, n_94);
  nor g94 (n_156, n_127, n_128);
  not g95 (n_130, n_99);
  nand g96 (n_155, n_129, n_130);
endmodule

module
     acc_RTL_WIDTH16_A_rtl_interface_N2_M16_RtlIn_Sum_rtl_interface_N2_M16_RtlOut(\A_d[15]
     , \A_d[14] , \A_d[13] , \A_d[12] , \A_d[11] , \A_d[10] , \A_d[9] ,
     \A_d[8] , \A_d[7] , \A_d[6] , \A_d[5] , \A_d[4] , \A_d[3] ,
     \A_d[2] , \A_d[1] , \A_d[0] , A_e, \Sum_d[15] , \Sum_d[14] ,
     \Sum_d[13] , \Sum_d[12] , \Sum_d[11] , \Sum_d[10] , \Sum_d[9] ,
     \Sum_d[8] , \Sum_d[7] , \Sum_d[6] , \Sum_d[5] , \Sum_d[4] ,
     \Sum_d[3] , \Sum_d[2] , \Sum_d[1] , \Sum_d[0] , Sum_e, CLK,
     _RESET);
  input \A_d[15] , \A_d[14] , \A_d[13] , \A_d[12] , \A_d[11] , \A_d[10]
       , \A_d[9] , \A_d[8] , \A_d[7] , \A_d[6] , \A_d[5] , \A_d[4] ,
       \A_d[3] , \A_d[2] , \A_d[1] , \A_d[0] ;
  input CLK, _RESET;
  output A_e, Sum_e;
  output \Sum_d[15] , \Sum_d[14] , \Sum_d[13] , \Sum_d[12] , \Sum_d[11]
       , \Sum_d[10] , \Sum_d[9] , \Sum_d[8] , \Sum_d[7] , \Sum_d[6] ,
       \Sum_d[5] , \Sum_d[4] , \Sum_d[3] , \Sum_d[2] , \Sum_d[1] ,
       \Sum_d[0] ;
  wire \A_d[15] , \A_d[14] , \A_d[13] , \A_d[12] , \A_d[11] , \A_d[10]
       , \A_d[9] , \A_d[8] , \A_d[7] , \A_d[6] , \A_d[5] , \A_d[4] ,
       \A_d[3] , \A_d[2] , \A_d[1] , \A_d[0] ;
  wire CLK, _RESET;
  wire A_e, Sum_e;
  wire \Sum_d[15] , \Sum_d[14] , \Sum_d[13] , \Sum_d[12] , \Sum_d[11] ,
       \Sum_d[10] , \Sum_d[9] , \Sum_d[8] , \Sum_d[7] , \Sum_d[6] ,
       \Sum_d[5] , \Sum_d[4] , \Sum_d[3] , \Sum_d[2] , \Sum_d[1] ,
       \Sum_d[0] ;
  wire n_1, \sum[0] , \sum[1] , \sum[2] , \sum[3] , \sum[4] , \sum[5] ,
       \sum[6] ;
  wire \sum[7] , \sum[8] , \sum[9] , \sum[10] , \sum[11] , \sum[12] ,
       \sum[13] , \sum[14] ;
  wire \sum[15] ;
  assign Sum_e = 1'b1;
  assign A_e = 1'b1;
  add_unsigned add_28_30(.\A[15]  (\sum[15] ), .\A[14]  (\sum[14] ),
       .\A[13]  (\sum[13] ), .\A[12]  (\sum[12] ), .\A[11]  (\sum[11]
       ), .\A[10]  (\sum[10] ), .\A[9]  (\sum[9] ), .\A[8]  (\sum[8] ),
       .\A[7]  (\sum[7] ), .\A[6]  (\sum[6] ), .\A[5]  (\sum[5] ),
       .\A[4]  (\sum[4] ), .\A[3]  (\sum[3] ), .\A[2]  (\sum[2] ),
       .\A[1]  (\sum[1] ), .\A[0]  (\sum[0] ), .\B[15]  (\A_d[15] ),
       .\B[14]  (\A_d[14] ), .\B[13]  (\A_d[13] ), .\B[12]  (\A_d[12]
       ), .\B[11]  (\A_d[11] ), .\B[10]  (\A_d[10] ), .\B[9]  (\A_d[9]
       ), .\B[8]  (\A_d[8] ), .\B[7]  (\A_d[7] ), .\B[6]  (\A_d[6] ),
       .\B[5]  (\A_d[5] ), .\B[4]  (\A_d[4] ), .\B[3]  (\A_d[3] ),
       .\B[2]  (\A_d[2] ), .\B[1]  (\A_d[1] ), .\B[0]  (\A_d[0] ),
       .\Z[15]  (\Sum_d[15] ), .\Z[14]  (\Sum_d[14] ), .\Z[13] 
       (\Sum_d[13] ), .\Z[12]  (\Sum_d[12] ), .\Z[11]  (\Sum_d[11] ),
       .\Z[10]  (\Sum_d[10] ), .\Z[9]  (\Sum_d[9] ), .\Z[8]  (\Sum_d[8]
       ), .\Z[7]  (\Sum_d[7] ), .\Z[6]  (\Sum_d[6] ), .\Z[5] 
       (\Sum_d[5] ), .\Z[4]  (\Sum_d[4] ), .\Z[3]  (\Sum_d[3] ), .\Z[2]
        (\Sum_d[2] ), .\Z[1]  (\Sum_d[1] ), .\Z[0]  (\Sum_d[0] ));
  CDN_flop \ff$sum_reg[0] (.clk (CLK), .d (\Sum_d[0] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (\sum[0]
       ));
  CDN_flop \ff$sum_reg[10] (.clk (CLK), .d (\Sum_d[10] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\sum[10] ));
  CDN_flop \ff$sum_reg[11] (.clk (CLK), .d (\Sum_d[11] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\sum[11] ));
  CDN_flop \ff$sum_reg[12] (.clk (CLK), .d (\Sum_d[12] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\sum[12] ));
  CDN_flop \ff$sum_reg[13] (.clk (CLK), .d (\Sum_d[13] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\sum[13] ));
  CDN_flop \ff$sum_reg[14] (.clk (CLK), .d (\Sum_d[14] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\sum[14] ));
  CDN_flop \ff$sum_reg[15] (.clk (CLK), .d (\Sum_d[15] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q
       (\sum[15] ));
  CDN_flop \ff$sum_reg[1] (.clk (CLK), .d (\Sum_d[1] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (\sum[1]
       ));
  CDN_flop \ff$sum_reg[2] (.clk (CLK), .d (\Sum_d[2] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (\sum[2]
       ));
  CDN_flop \ff$sum_reg[3] (.clk (CLK), .d (\Sum_d[3] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (\sum[3]
       ));
  CDN_flop \ff$sum_reg[4] (.clk (CLK), .d (\Sum_d[4] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (\sum[4]
       ));
  CDN_flop \ff$sum_reg[5] (.clk (CLK), .d (\Sum_d[5] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (\sum[5]
       ));
  CDN_flop \ff$sum_reg[6] (.clk (CLK), .d (\Sum_d[6] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (\sum[6]
       ));
  CDN_flop \ff$sum_reg[7] (.clk (CLK), .d (\Sum_d[7] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (\sum[7]
       ));
  CDN_flop \ff$sum_reg[8] (.clk (CLK), .d (\Sum_d[8] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (\sum[8]
       ));
  CDN_flop \ff$sum_reg[9] (.clk (CLK), .d (\Sum_d[9] ), .sena (1'b1),
       .aclr (n_1), .apre (1'b0), .srl (1'b0), .srd (1'b0), .q (\sum[9]
       ));
  not g1 (n_1, _RESET);
endmodule

module acc(\A_d[0][15] , \A_d[0][14] , \A_d[0][13] , \A_d[0][12] ,
     \A_d[0][11] , \A_d[0][10] , \A_d[0][9] , \A_d[0][8] , \A_d[0][7] ,
     \A_d[0][6] , \A_d[0][5] , \A_d[0][4] , \A_d[0][3] , \A_d[0][2] ,
     \A_d[0][1] , \A_d[0][0] , \A_d[1][15] , \A_d[1][14] , \A_d[1][13]
     , \A_d[1][12] , \A_d[1][11] , \A_d[1][10] , \A_d[1][9] ,
     \A_d[1][8] , \A_d[1][7] , \A_d[1][6] , \A_d[1][5] , \A_d[1][4] ,
     \A_d[1][3] , \A_d[1][2] , \A_d[1][1] , \A_d[1][0] , \A_e[15] ,
     \A_e[14] , \A_e[13] , \A_e[12] , \A_e[11] , \A_e[10] , \A_e[9] ,
     \A_e[8] , \A_e[7] , \A_e[6] , \A_e[5] , \A_e[4] , \A_e[3] ,
     \A_e[2] , \A_e[1] , \A_e[0] , \Sum_d[0][15] , \Sum_d[0][14] ,
     \Sum_d[0][13] , \Sum_d[0][12] , \Sum_d[0][11] , \Sum_d[0][10] ,
     \Sum_d[0][9] , \Sum_d[0][8] , \Sum_d[0][7] , \Sum_d[0][6] ,
     \Sum_d[0][5] , \Sum_d[0][4] , \Sum_d[0][3] , \Sum_d[0][2] ,
     \Sum_d[0][1] , \Sum_d[0][0] , \Sum_d[1][15] , \Sum_d[1][14] ,
     \Sum_d[1][13] , \Sum_d[1][12] , \Sum_d[1][11] , \Sum_d[1][10] ,
     \Sum_d[1][9] , \Sum_d[1][8] , \Sum_d[1][7] , \Sum_d[1][6] ,
     \Sum_d[1][5] , \Sum_d[1][4] , \Sum_d[1][3] , \Sum_d[1][2] ,
     \Sum_d[1][1] , \Sum_d[1][0] , \Sum_e[15] , \Sum_e[14] , \Sum_e[13]
     , \Sum_e[12] , \Sum_e[11] , \Sum_e[10] , \Sum_e[9] , \Sum_e[8] ,
     \Sum_e[7] , \Sum_e[6] , \Sum_e[5] , \Sum_e[4] , \Sum_e[3] ,
     \Sum_e[2] , \Sum_e[1] , \Sum_e[0] , CLK, _RESET);
  input \A_d[0][15] , \A_d[0][14] , \A_d[0][13] , \A_d[0][12] ,
       \A_d[0][11] , \A_d[0][10] , \A_d[0][9] , \A_d[0][8] , \A_d[0][7]
       , \A_d[0][6] , \A_d[0][5] , \A_d[0][4] , \A_d[0][3] , \A_d[0][2]
       , \A_d[0][1] , \A_d[0][0] ;
  input \A_d[1][15] , \A_d[1][14] , \A_d[1][13] , \A_d[1][12] ,
       \A_d[1][11] , \A_d[1][10] , \A_d[1][9] , \A_d[1][8] , \A_d[1][7]
       , \A_d[1][6] , \A_d[1][5] , \A_d[1][4] , \A_d[1][3] , \A_d[1][2]
       , \A_d[1][1] , \A_d[1][0] ;
  input \Sum_e[15] , \Sum_e[14] , \Sum_e[13] , \Sum_e[12] , \Sum_e[11]
       , \Sum_e[10] , \Sum_e[9] , \Sum_e[8] , \Sum_e[7] , \Sum_e[6] ,
       \Sum_e[5] , \Sum_e[4] , \Sum_e[3] , \Sum_e[2] , \Sum_e[1] ,
       \Sum_e[0] ;
  input CLK, _RESET;
  output \A_e[15] , \A_e[14] , \A_e[13] , \A_e[12] , \A_e[11] ,
       \A_e[10] , \A_e[9] , \A_e[8] , \A_e[7] , \A_e[6] , \A_e[5] ,
       \A_e[4] , \A_e[3] , \A_e[2] , \A_e[1] , \A_e[0] ;
  output \Sum_d[0][15] , \Sum_d[0][14] , \Sum_d[0][13] , \Sum_d[0][12]
       , \Sum_d[0][11] , \Sum_d[0][10] , \Sum_d[0][9] , \Sum_d[0][8] ,
       \Sum_d[0][7] , \Sum_d[0][6] , \Sum_d[0][5] , \Sum_d[0][4] ,
       \Sum_d[0][3] , \Sum_d[0][2] , \Sum_d[0][1] , \Sum_d[0][0] ;
  output \Sum_d[1][15] , \Sum_d[1][14] , \Sum_d[1][13] , \Sum_d[1][12]
       , \Sum_d[1][11] , \Sum_d[1][10] , \Sum_d[1][9] , \Sum_d[1][8] ,
       \Sum_d[1][7] , \Sum_d[1][6] , \Sum_d[1][5] , \Sum_d[1][4] ,
       \Sum_d[1][3] , \Sum_d[1][2] , \Sum_d[1][1] , \Sum_d[1][0] ;
  wire \A_d[0][15] , \A_d[0][14] , \A_d[0][13] , \A_d[0][12] ,
       \A_d[0][11] , \A_d[0][10] , \A_d[0][9] , \A_d[0][8] , \A_d[0][7]
       , \A_d[0][6] , \A_d[0][5] , \A_d[0][4] , \A_d[0][3] , \A_d[0][2]
       , \A_d[0][1] , \A_d[0][0] ;
  wire \A_d[1][15] , \A_d[1][14] , \A_d[1][13] , \A_d[1][12] ,
       \A_d[1][11] , \A_d[1][10] , \A_d[1][9] , \A_d[1][8] , \A_d[1][7]
       , \A_d[1][6] , \A_d[1][5] , \A_d[1][4] , \A_d[1][3] , \A_d[1][2]
       , \A_d[1][1] , \A_d[1][0] ;
  wire \Sum_e[15] , \Sum_e[14] , \Sum_e[13] , \Sum_e[12] , \Sum_e[11] ,
       \Sum_e[10] , \Sum_e[9] , \Sum_e[8] , \Sum_e[7] , \Sum_e[6] ,
       \Sum_e[5] , \Sum_e[4] , \Sum_e[3] , \Sum_e[2] , \Sum_e[1] ,
       \Sum_e[0] ;
  wire CLK, _RESET;
  wire \A_e[15] , \A_e[14] , \A_e[13] , \A_e[12] , \A_e[11] , \A_e[10]
       , \A_e[9] , \A_e[8] , \A_e[7] , \A_e[6] , \A_e[5] , \A_e[4] ,
       \A_e[3] , \A_e[2] , \A_e[1] , \A_e[0] ;
  wire \Sum_d[0][15] , \Sum_d[0][14] , \Sum_d[0][13] , \Sum_d[0][12] ,
       \Sum_d[0][11] , \Sum_d[0][10] , \Sum_d[0][9] , \Sum_d[0][8] ,
       \Sum_d[0][7] , \Sum_d[0][6] , \Sum_d[0][5] , \Sum_d[0][4] ,
       \Sum_d[0][3] , \Sum_d[0][2] , \Sum_d[0][1] , \Sum_d[0][0] ;
  wire \Sum_d[1][15] , \Sum_d[1][14] , \Sum_d[1][13] , \Sum_d[1][12] ,
       \Sum_d[1][11] , \Sum_d[1][10] , \Sum_d[1][9] , \Sum_d[1][8] ,
       \Sum_d[1][7] , \Sum_d[1][6] , \Sum_d[1][5] , \Sum_d[1][4] ,
       \Sum_d[1][3] , \Sum_d[1][2] , \Sum_d[1][1] , \Sum_d[1][0] ;
  wire \d[0] , \d[1] , \d[2] , \d[3] , \d[4] , \d[5] , \d[6] , \d[7] ;
  wire \d[8] , \d[9] , \d[10] , \d[11] , \d[12] , \d[13] , \d[14] ,
       \d[15] ;
  wire e, n_33, n_34, n_35, n_36, n_37, n_38, n_39;
  wire n_40, n_41, n_42, n_43, n_44, n_45, n_46, n_47;
  wire n_48, n_49;
  RECV_M_1ofN_M16_N2_L_e1of2_16_In_R_rtl_interface_N2_M16_RcvOut
       A_RECEIVE(\A_d[0][15] , \A_d[0][14] , \A_d[0][13] , \A_d[0][12]
       , \A_d[0][11] , \A_d[0][10] , \A_d[0][9] , \A_d[0][8] ,
       \A_d[0][7] , \A_d[0][6] , \A_d[0][5] , \A_d[0][4] , \A_d[0][3] ,
       \A_d[0][2] , \A_d[0][1] , \A_d[0][0] , \A_d[1][15] , \A_d[1][14]
       , \A_d[1][13] , \A_d[1][12] , \A_d[1][11] , \A_d[1][10] ,
       \A_d[1][9] , \A_d[1][8] , \A_d[1][7] , \A_d[1][6] , \A_d[1][5] ,
       \A_d[1][4] , \A_d[1][3] , \A_d[1][2] , \A_d[1][1] , \A_d[1][0] ,
       \A_e[15] , \A_e[14] , \A_e[13] , \A_e[12] , \A_e[11] , \A_e[10]
       , \A_e[9] , \A_e[8] , \A_e[7] , \A_e[6] , \A_e[5] , \A_e[4] ,
       \A_e[3] , \A_e[2] , \A_e[1] , \A_e[0] , \d[15] , \d[14] , \d[13]
       , \d[12] , \d[11] , \d[10] , \d[9] , \d[8] , \d[7] , \d[6] ,
       \d[5] , \d[4] , \d[3] , \d[2] , \d[1] , \d[0] , e);
  SEND_M_1ofN_M16_N2_L_rtl_interface_N2_M16_SndIn_R_e1of2_16_Out
       Sum_SEND(n_48, n_47, n_46, n_45, n_44, n_43, n_42, n_41, n_40,
       n_39, n_38, n_37, n_36, n_35, n_34, n_33, n_49, \Sum_d[0][15] ,
       \Sum_d[0][14] , \Sum_d[0][13] , \Sum_d[0][12] , \Sum_d[0][11] ,
       \Sum_d[0][10] , \Sum_d[0][9] , \Sum_d[0][8] , \Sum_d[0][7] ,
       \Sum_d[0][6] , \Sum_d[0][5] , \Sum_d[0][4] , \Sum_d[0][3] ,
       \Sum_d[0][2] , \Sum_d[0][1] , \Sum_d[0][0] , \Sum_d[1][15] ,
       \Sum_d[1][14] , \Sum_d[1][13] , \Sum_d[1][12] , \Sum_d[1][11] ,
       \Sum_d[1][10] , \Sum_d[1][9] , \Sum_d[1][8] , \Sum_d[1][7] ,
       \Sum_d[1][6] , \Sum_d[1][5] , \Sum_d[1][4] , \Sum_d[1][3] ,
       \Sum_d[1][2] , \Sum_d[1][1] , \Sum_d[1][0] , \Sum_e[15] ,
       \Sum_e[14] , \Sum_e[13] , \Sum_e[12] , \Sum_e[11] , \Sum_e[10] ,
       \Sum_e[9] , \Sum_e[8] , \Sum_e[7] , \Sum_e[6] , \Sum_e[5] ,
       \Sum_e[4] , \Sum_e[3] , \Sum_e[2] , \Sum_e[1] , \Sum_e[0] );
  acc_RTL_WIDTH16_A_rtl_interface_N2_M16_RtlIn_Sum_rtl_interface_N2_M16_RtlOut
       acc_RTL_BODY(.\A_d[15]  (\d[15] ), .\A_d[14]  (\d[14] ),
       .\A_d[13]  (\d[13] ), .\A_d[12]  (\d[12] ), .\A_d[11]  (\d[11]
       ), .\A_d[10]  (\d[10] ), .\A_d[9]  (\d[9] ), .\A_d[8]  (\d[8] ),
       .\A_d[7]  (\d[7] ), .\A_d[6]  (\d[6] ), .\A_d[5]  (\d[5] ),
       .\A_d[4]  (\d[4] ), .\A_d[3]  (\d[3] ), .\A_d[2]  (\d[2] ),
       .\A_d[1]  (\d[1] ), .\A_d[0]  (\d[0] ), .A_e (e), .\Sum_d[15] 
       (n_48), .\Sum_d[14]  (n_47), .\Sum_d[13]  (n_46), .\Sum_d[12] 
       (n_45), .\Sum_d[11]  (n_44), .\Sum_d[10]  (n_43), .\Sum_d[9] 
       (n_42), .\Sum_d[8]  (n_41), .\Sum_d[7]  (n_40), .\Sum_d[6] 
       (n_39), .\Sum_d[5]  (n_38), .\Sum_d[4]  (n_37), .\Sum_d[3] 
       (n_36), .\Sum_d[2]  (n_35), .\Sum_d[1]  (n_34), .\Sum_d[0] 
       (n_33), .Sum_e (n_49), .CLK (CLK), ._RESET (_RESET));
endmodule

`ifdef SYNTHESIS
`else
module CDN_flop(clk, d, sena, aclr, apre, srl, srd, q);
  input clk, d, sena, aclr, apre, srl, srd;
  output q;
  wire clk, d, sena, aclr, apre, srl, srd;
  wire q;
  reg  qi;
  assign #1 q = qi;
  always 
    @(posedge clk or posedge apre or posedge aclr) 
      if (aclr) 
        qi = 0;
      else if (apre) 
          qi = 1;
        else if (srl) 
            qi = srd;
          else begin
            if (sena) 
              qi = d;
          end
  initial 
    qi = 1'b0;
endmodule
`endif
